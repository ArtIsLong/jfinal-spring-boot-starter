/** * $Id: DefaultRouter.java,v 1.0 2019-07-27 16:17 chenmin Exp $ */package com.github.jfinal.config;import com.github.jfinal.annotation.RouterPath;import com.jfinal.config.Routes;import com.jfinal.core.Controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.ApplicationContext;import org.springframework.util.ObjectUtils;import java.util.Map;/** * @author 陈敏 * @version $Id: DefaultRouter.java,v 1.1 2019-07-27 16:17 chenmin Exp $ * Created on 2019-07-27 16:17 * My blog： https://www.chenmin.info */public class DefaultRouter extends Routes {    @Autowired    private ApplicationContext applicationContext;    @Autowired    private DefaultInterceptor interceptor;    @Override    public void config() {        addInterceptor(interceptor);        Map<String, Controller> controllerMap = applicationContext.getBeansOfType(Controller.class);        if (!ObjectUtils.isEmpty(controllerMap)) {            controllerMap.values().forEach(controller -> {                String value = "";                RouterPath annotation = controller.getClass().getAnnotation(RouterPath.class);                if (!ObjectUtils.isEmpty(annotation)) {                    value = annotation.value();                }                if (ObjectUtils.isEmpty(value)) {                    String simpleName = controller.getClass().getSimpleName();                    value = simpleName.substring(0, 1).toLowerCase() + simpleName.substring(1);                }                add(value, controller.getClass());            });        }    }}