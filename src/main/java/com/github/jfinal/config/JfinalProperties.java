/** * $Id: JfinalProperties.java,v 1.0 2019-07-14 00:46 chenmin Exp $ */package com.github.jfinal.config;import com.google.common.collect.Lists;import com.google.common.collect.Maps;import com.jfinal.kit.StrKit;import com.jfinal.render.ViewType;import lombok.Data;import lombok.experimental.Accessors;import org.springframework.beans.factory.InitializingBean;import org.springframework.boot.context.properties.ConfigurationProperties;import org.springframework.util.ObjectUtils;import java.util.List;import java.util.Map;/** * @author 陈敏 * @version $Id: JfinalProperties.java,v 1.1 2019-07-14 00:46 chenmin Exp $ * Created on 2019-07-14 00:46 * My blog： https://www.chenmin.info */@Data@Accessors(chain = true)@ConfigurationProperties(prefix = "jfinal")public class JfinalProperties implements InitializingBean {    /**     * SQL模板路径     */    private String sqlTemplate;    private String kitClass;    private Boolean devMode = false;    private Boolean injectDependency = false;    private String baseUploadPath = "";    private String baseDownloadPath = "";    private Integer maxPostSize = 104857600;    private Map<Integer, String> errorViewMapping = Maps.newHashMap();    private Integer delayInSeconds;    private String defaultBaseName;    private String defaultLocale;    private Boolean injectSuperClass;    private Boolean reportAfterInvocation;    private String datePattern = "yyyy-MM-dd HH:mm:ss";    private String urlParaSeparator;    private String viewExtension;    private ViewType viewType;    private Boolean clearAfterMapping;    private Boolean mappingSuperClass;    private Boolean createSession;    private String baseTemplatePath;    private Boolean sessionInView;    private Boolean allowRequestOverride;    private Boolean allowSessionOverride;    private Integer configPluginOrder;    private List<String> sharedFunctionFiles = Lists.newArrayList();    private Map<String, TaskInfo> taskInfoMap = Maps.newHashMap();    @Data    @Accessors(chain = true)    public static class TaskInfo {        private String cron;        private String task;        private Boolean daemon;        private Boolean enable;        public TaskInfo() {        }        public TaskInfo(String cron, String task, boolean daemon, boolean enable) {            if (ObjectUtils.isEmpty(cron)) {                throw new IllegalArgumentException("cron 不能为空.");            }            if (ObjectUtils.isEmpty(task)) {                throw new IllegalArgumentException("task 不能为 null.");            }            this.cron = cron.trim();            this.task = task;            this.daemon = daemon;            this.enable = enable;        }    }    @Override    public void afterPropertiesSet() {    }}